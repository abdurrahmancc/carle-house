import React from "react";
import "./Blog.css";
const Blog = () => {
  return (
    <div className="blog-page container">
      <h1 className="text-center mt-5">FAQ</h1>
      <div className="card-group">
        <div className="card">
          <div className="card-body">
            <h6 className="card-title text-center">
              <strong>Difference between javascript and nodejs</strong>
            </h6>
            <hr className="w-100" />
            <p className="card-text">
              জাভাস্ক্রিপ্ট একটি স্ক্রিপ্টিং ভাষা। জাভাস্ক্রিপ্ট ক্লাইন্ট সাইট হিসেবে ব্যবহার করা
              হয়। এটি বেশিরভাগই JS হিসাবে সংক্ষিপ্ত হয়। এটা বলা যেতে পারে যে জাভাস্ক্রিপ্ট ECMA
              স্ক্রিপ্টের আপডেট সংস্করণ। জাভাস্ক্রিপ্ট একটি উচ্চ-স্তরের প্রোগ্রামিং ভাষা যা ওপস
              ধারণা ব্যবহার করে তবে এটি প্রোটোটাইপ উত্তরাধিকারের উপর ভিত্তি করে।
            </p>
            <p className="card-text">
              Nodejs হল একটি জাভাস্ক্রিপ্ট ইঞ্জিন যা দিয়ে আপনি যেকোন অ্যাপ্লিকেশন লিখতে পারেন। এটি
              আপনার জাভাস্ক্রিপ্ট কোড চালায়। NodeJS দিয়ে ব্যাক এন্ড হিসেবে ব্যবহৃত হয়। এবং সাধারণত,
              এটি এমন সার্ভার তৈরি করতে ব্যবহৃত হয় যা ওয়েব অনুরোধে সাড়া দিতে পারে, যদিও এটি অনেক
              অন্যান্য ধরণের কোডের জন্যও ব্যবহার করা যেতে পারে।
            </p>
          </div>
        </div>
        <div className="card">
          <div className="card-body">
            <h6 className="card-title text-center">
              <strong>When should you use node js and MongoDB</strong>
            </h6>
            <hr className="w-100" />
            <p className="card-text">
              যেকোনো প্রকল্পের একটি প্রোগ্রামিং পরিবেশ এবং একটি রানটাইম লাইব্রেরি প্রয়োজন যা আপনাকে
              মৌলিক প্রোগ্রামিং টুল/সমর্থন প্রদান করে এবং আপনার কোড কম্পাইল করতে পারে। Nodejs হল
              জাভাস্ক্রিপ্ট প্রোগ্রামিং ভাষার টুল। সুতরাং, আপনি যদি javascript এর কোনো ধরনের
              stand-alone প্রোগ্রাম বা সার্ভারে লিখতে চান, তখন আপনি এর জন্য node.js ব্যবহার করতে
              পারেন।
            </p>
            <p className="card-text">
              আপনার অ্যাপ্লিকেশনের যদি ক্রমাগতভাবে ডেটা সঞ্চয় বা জমা করার ক্ষমতার প্রয়োজন হয় যাতে
              আপনি দক্ষতার সাথে অনুসন্ধান করতে পারেন বা পরে এটি আপডেট করতে পারেন, তাহলে আপনি সাধারণত
              কিছু ধরণের ডাটাবেস ব্যবহার করবেন। কয়েক ডজন জনপ্রিয় ডাটাবেস রয়েছে। তার মধ্যে MongoDB
              এরকম একটি ডাটাবেস।
            </p>
          </div>
        </div>
        <div className="card">
          <div className="card-body">
            <h6 className="card-title text-center">
              <strong>Differences between SQL and NoSQL</strong>
            </h6>
            <hr className="w-100" />
            <p className="card-text">
              JWT একটি উন্মুক্ত মান যা দুটি পক্ষের মধ্যে নিরাপত্তা তথ্য ভাগ করতে ব্যবহৃত হয় - একটি
              ক্লায়েন্ট এবং একটি সার্ভার। প্রতিটি JWT-এ এনকোড করা JSON অবজেক্ট রয়েছে, যার মধ্যে
              দাবির সেট রয়েছে। টোকেন ইস্যু করার পরে দাবিগুলি পরিবর্তন করা যাবে না তা নিশ্চিত করার
              জন্য একটি ক্রিপ্টোগ্রাফিক অ্যালগরিদম ব্যবহার করে JWTs স্বাক্ষরিত হয়। JWTs অন্যান্য
              ওয়েব টোকেন থেকে আলাদা যে তারা দাবির একটি সেট ধারণ করে। দাবি দুটি পক্ষের মধ্যে তথ্য
              প্রেরণ করতে ব্যবহার করা হয়. এই দাবিগুলি কী তা নির্ভর করে হাতে থাকা ব্যবহারের
              ক্ষেত্রে। উদাহরণ স্বরূপ, একটি দাবি করতে পারে কে টোকেন জারি করেছে, এটি কতদিনের জন্য
              বৈধ, বা ক্লায়েন্টকে কী অনুমতি দেওয়া হয়েছে।
            </p>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Blog;
